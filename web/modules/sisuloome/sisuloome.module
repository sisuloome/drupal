<?php

/**
 * @file
 * Contains sisuloome.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function sisuloome_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the sisuloome module.
    case 'help.page.sisuloome':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Sisuloome main module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_h5p_semantics_alter().
 */
function sisuloome_h5p_semantics_alter(&$semantics, $name, $version) {
  $iterator = new \RecursiveIteratorIterator(new \RecursiveArrayIterator($semantics, \RecursiveIteratorIterator::SELF_FIRST));

  foreach($iterator as $key => $value) {
    if ($key === 'type' && $value === 'text') {
      $tmp = $iterator->getInnerIterator()->getArrayCopy();

      if (isset($tmp['tags']) && is_array($tmp['tags'])) {
        $tags = $iterator->offsetGet('tags');
        $tags_added = FALSE;

        foreach(['sub', 'sup'] as $tag) {
          if (!in_array($tag, $tags)) {
            array_push($tags, $tag);
            $tags_added = TRUE;
          }
        }

        if ($tags_added) {
          $iterator->getInnerIterator()->offsetSet('tags', $tags);
        }
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function sisuloome_form_user_form_alter(&$form, &$form_state) {
  if (\Drupal::moduleHandler()->moduleExists('openid_connect')) {
    $account = \Drupal::currentUser();
    $access = openid_connect_set_password_access($account);

    if (!$access) {
      $constraints = $form_state->getStorage()['user']->getFieldDefinition('mail')->getConstraints();

      if (array_key_exists('ProtectedUserField', $constraints)) {
        unset($constraints['ProtectedUserField']);
        $form_state->getStorage()['user']->getFieldDefinition('mail')->setConstraints($constraints);
      }
    }
  }
}
