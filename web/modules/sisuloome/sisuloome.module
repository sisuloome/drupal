<?php

/**
 * @file
 * Contains sisuloome.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function sisuloome_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the sisuloome module.
    case 'help.page.sisuloome':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Sisuloome main module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_h5p_semantics_alter().
 */
function sisuloome_h5p_semantics_alter(&$semantics, $name, $version) {
  $iterator = new \RecursiveIteratorIterator(new \RecursiveArrayIterator($semantics, \RecursiveIteratorIterator::SELF_FIRST));

  foreach($iterator as $key => $value) {
    if ($key === 'type' && $value === 'text') {
      $tmp = $iterator->getInnerIterator()->getArrayCopy();

      if (isset($tmp['tags']) && is_array($tmp['tags'])) {
        $tags = $iterator->offsetGet('tags');
        $tags_added = FALSE;

        foreach(['sub', 'sup'] as $tag) {
          if (!in_array($tag, $tags)) {
            array_push($tags, $tag);
            $tags_added = TRUE;
          }
        }

        if ($tags_added) {
          $iterator->getInnerIterator()->offsetSet('tags', $tags);
        }
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function sisuloome_form_user_form_alter(&$form, &$form_state) {
  if (\Drupal::moduleHandler()->moduleExists('openid_connect')) {
    $account = \Drupal::currentUser();
    $access = \Drupal::service('openid_connect.openid_connect')->hasSetPasswordAccess($account);

    if (!$access) {
      $constraints = $form_state->getStorage()['user']->getFieldDefinition('mail')->getConstraints();

      if (array_key_exists('ProtectedUserField', $constraints)) {
        unset($constraints['ProtectedUserField']);
        $form_state->getStorage()['user']->getFieldDefinition('mail')->setConstraints($constraints);
      }
    }
  }
}

/**
 * Implements  hook_field_widget_WIDGET_TYPE_form_alter().
 *
 * Only allows CC BY-SA 3.0 license.
 */
/*function sisuloome_field_widget_h5p_editor_form_alter(&$element, \Drupal\Core\Form\FormStateInterface $form_state, $context) {
  if (isset($element['h5p_content']['editor']['#attached']['drupalSettings']['h5peditor'])) {
    if (isset($element['h5p_content']['editor']['#attached']['drupalSettings']['h5peditor']['metadataSemantics'])) {
      foreach($element['h5p_content']['editor']['#attached']['drupalSettings']['h5peditor']['metadataSemantics'] as $field) {
        if ($field->name === 'license' && $field->type === 'select') {
          $field->default = 'CC BY-SA';

          foreach($field->options as $key => $option) {
            if (isset($option->type) && $option->type === 'optgroup') {
              foreach($option->options as $og_key => $og_option) {
                if ($og_option->value !== 'CC BY-SA') {
                  unset($option->options[$og_key]);
                } else {
                  if (isset($og_option->versions)) {
                    foreach ($og_option->versions as $v_key => $version) {
                      if ($version->value !== '3.0'){
                        unset($og_option->versions[$v_key]);
                      }
                    }

                    $og_option->versions = array_values($og_option->versions);
                  }
                }
              }

              $option->options = array_values($option->options);
            } else if (isset($option->value) && $option->value !== 'CC BY-SA') {
              unset($field->options[$key]);
            }
          }

          $field->options = array_values($field->options);
        }

        if ($field->name === 'licenseVersion' && $field->type === 'select') {
          foreach ($field->options as $key => $option) {
            if ($option->value !== '3.0') {
              unset($field->options[$key]);
            }
          }

          $field->options = array_values($field->options);
        }
      }
    }
  }

  $element['sisuloome_license_information'] = [
    '#type' => 'container',
    '#attributes' => [
      'class' => ['sisuloome-license-infromation',],
    ],
  ];
  $element['sisuloome_license_information']['text'] = [
    '#prefix' => '<strong>',
    '#suffix' => '</strong>',
    '#plain_text' => t('By publishing materials, author agrees on Creative Commons licence CC BY-SA 3.0. This licence applies to all published learning resources in Sisuloome and e-Koolikott. In case user is not going to agree on those terms, publishing materials is prohibited.'),
  ];
}*/
